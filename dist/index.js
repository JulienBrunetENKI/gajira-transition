(()=>{var __webpack_modules__={33:(e,t,s)=>{const r=s(106);const i=s(738);e.exports=class{constructor({githubEvent:e,argv:t,config:s}){this.Jira=new i({baseUrl:s.baseUrl,token:s.token,email:s.email});this.config=s;this.argv=t;this.githubEvent=e}async execute(){const{argv:e}=this;const t=e.issue;const{transitions:s}=await this.Jira.getIssueTransitions(t);const i=r.find(s,(t=>{if(t.id===e.transitionId)return true;if(t.name.toLowerCase()===e.transition.toLowerCase())return true}));if(!i){console.log("Please specify transition name or transition id.");console.log("Possible transitions:");s.forEach((e=>{console.log(`{ id: ${e.id}, name: ${e.name} } transitions issue to '${e.to.name}' status.`)}));return}console.log(`Selected transition:${JSON.stringify(i,null,4)}`);let n={transition:{id:i.id}};if(e.fields){const t=JSON.parse(e.fields);n={...n,fields:t}}if(e.update){const t=JSON.parse(e.update);n={...n,update:t}}await this.Jira.transitionIssue(t,n);const o=await this.Jira.getIssue(t);console.log(`Changed ${t} status to : ${r.get(o,"fields.status.name")} .`);console.log(`Link to issue: ${this.config.baseUrl}/browse/${t}`);return{}}}},738:(e,t,s)=>{const{get:r}=s(106);const i="jira";const{format:n}=s(310);const o=s(210)(i);class Jira{constructor({baseUrl:e,token:t,email:s}){this.baseUrl=e;this.token=t;this.email=s}async getIssue(e,t={}){const{fields:s=[],expand:i=[]}=t;try{return this.fetch("getIssue",{pathname:`/rest/api/2/issue/${e}`,query:{fields:s.join(","),expand:i.join(",")}})}catch(e){if(r(e,"res.status")===404){return}throw e}}async getIssueTransitions(e){return this.fetch("getIssueTransitions",{pathname:`/rest/api/2/issue/${e}/transitions`},{method:"GET"})}async transitionIssue(e,t){return this.fetch("transitionIssue",{pathname:`/rest/api/2/issue/${e}/transitions`},{method:"POST",body:t})}async fetch(e,{host:t,pathname:s,query:r},{method:a,body:c,headers:u={}}={}){const _=n({host:t||this.baseUrl,pathname:s,query:r});if(!a){a="GET"}if(u["Content-Type"]===undefined){u["Content-Type"]="application/json"}if(u.Authorization===undefined){u.Authorization=`Basic ${Buffer.from(`${this.email}:${this.token}`).toString("base64")}`}if(c&&u["Content-Type"]==="application/json"){c=JSON.stringify(c)}const l={req:{method:a,headers:u,body:c,url:_}};try{await o(l,`${i}:${e}`)}catch(e){const t={originError:e,source:"jira"};delete l.req.headers;throw Object.assign(new Error("Jira API error"),l,t)}return l.res.body}}e.exports=Jira},210:(e,t,s)=>{const r=s(678);e.exports=e=>async(e,t="unknown")=>{const s=await r(e.req.url,e.req);e.res={headers:s.headers.raw(),status:s.status};e.res.body=await s.text();const i=(s.headers.get("content-type")||"").includes("application/json");if(i&&e.res.body){e.res.body=JSON.parse(e.res.body)}if(!s.ok){throw new Error(s.statusText)}return e}},927:module=>{module.exports=eval("require")("@actions/core")},106:module=>{module.exports=eval("require")("lodash")},678:module=>{module.exports=eval("require")("node-fetch")},125:module=>{module.exports=eval("require")("yaml")},147:e=>{"use strict";e.exports=require("fs")},310:e=>{"use strict";e.exports=require("url")}};var __webpack_module_cache__={};function __nccwpck_require__(e){var t=__webpack_module_cache__[e];if(t!==undefined){return t.exports}var s=__webpack_module_cache__[e]={exports:{}};var r=true;try{__webpack_modules__[e](s,s.exports,__nccwpck_require__);r=false}finally{if(r)delete __webpack_module_cache__[e]}return s.exports}if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var __webpack_exports__={};(()=>{const e=__nccwpck_require__(147);const t=__nccwpck_require__(125);const s=__nccwpck_require__(927);const r=`${process.env.HOME}/jira/config.yml`;const i=__nccwpck_require__(33);const n=require(process.env.GITHUB_EVENT_PATH);const o=t.parse(e.readFileSync(r,"utf8"));async function exec(){try{const s=await new i({githubEvent:n,argv:parseArgs(),config:o}).execute();if(s){const i=Object.assign({},o,s);e.writeFileSync(r,t.stringify(i));return}console.log("Failed to transition issue.");process.exit(78)}catch(e){console.error(e);process.exit(1)}}function parseArgs(){const e=s.getInput("transition");const t=s.getInput("transitionId");if(!e&&!t){throw new Error("Error: please specify either a transition or transitionId")}return{issue:s.getInput("issue"),transition:e,transitionId:t,fields:s.getInput("fields"),update:s.getInput("update")}}exec()})();module.exports=__webpack_exports__})();